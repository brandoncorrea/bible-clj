(ns bible.widget-helper
  (:use [cljd.test :only [deftest]])
  (:require ["package:flutter/material.dart" :as m]
            ["package:flutter_test/flutter_test.dart" :as t]
            [cljd.flutter :as f]))

(defn find-text [text] (t/find.text text))

(defmacro deftest-widget [test-name bindings & body]
  (let [binding (bindings 0)
        binding (if (map? binding)
                  (assoc (dissoc binding :keys) :flds (:keys binding))
                  binding)]
    `(deftest ~test-name
              :runner (t/testWidgets [tester#])
              (let [^t/WidgetTester ~binding tester#]
                ~@body))))

(defmacro should-find-n [n finder]
  `(t/expect ~finder (t/findsNWidgets ~n)))

(defmacro should-find-one [finder]
  `(t/expect ~finder t/findsOneWidget))

(defmacro pump
  ([widget-tester widget]
   `(await (.pumpWidget ~widget-tester (f/widget (m/MaterialApp) .home ~widget))))
  ([widget-tester] `(await (.pump ~widget-tester))))

(defmacro tap [widget-tester thing]
  `(await (.tap ~widget-tester ~thing)))