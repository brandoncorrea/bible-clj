name: Release

on:
  push:
    branches: [ release ]

jobs:
  release:
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Install Clojure CLI
        run: |
          curl -LO https://github.com/clojure/brew-install/releases/latest/download/linux-install.sh
          chmod +x linux-install.sh
          sudo ./linux-install.sh

      - name: Install ARM64 Dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: clang cmake ninja-build pkg-config libgtk-3-dev libblkid-dev liblzma-dev
          version: 1.0

      - name: Set up Dart
        run: |
          curl -O https://storage.googleapis.com/dart-archive/channels/stable/release/latest/sdk/dartsdk-linux-arm64-release.zip
          sudo unzip dartsdk-linux-arm64-release.zip -d /usr/local/
          echo "/usr/local/dart-sdk/bin" >> "$GITHUB_PATH"
          rm dartsdk-linux-arm64-release.zip

      - name: Install Flutter
        run: |
          git clone https://github.com/flutter/flutter.git -b stable
          echo "$PWD/flutter/bin" >> "$GITHUB_PATH"

      - name: Set up Flutter
        run: |
          flutter --disable-analytics
          flutter precache
          flutter config --no-analytics
          flutter config --enable-linux-desktop
          flutter config --enable-web
          flutter doctor

      - name: Compile ClojureDart
        run: clojure -M:cljd compile

      - name: Build ARM64
        run: |
          flutter config --enable-linux-desktop
          flutter build linux --release --target-platform linux-arm64

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: arm64
          path: build/linux/arm64/release/bundle/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ github.run_number }}"
          name: "Release ${{ github.run_number }}"
          body: "Automated release for ARM64"
          draft: false
          prerelease: false
          files: build/linux/arm64/release/bundle/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
