name: Release

on:
  push:
    branches: [ release ]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build ARM64 Dockerfile
        run: docker build -t cljd-flutter-arm64 -f ./docker/arm64/Dockerfile .

      - name: Build Flutter Artifact
        run: |
          docker run --rm -v $(pwd):/app -w /app cljd-flutter-arm64 \
            /bin/bash -c "
              source /root/.profile && \
              clojure -M:cljd compile && \
              flutter build linux --release --target-platform linux-arm64 && \
              mkdir -p /app/artifacts && \
              cp -r /app/build/linux/arm64/release/bundle/* /app/artifacts/"
          mkdir -p artifacts
          cp -r build/linux/arm64/release/bundle/* artifacts/

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bible-arm64
          path: artifacts/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ github.run_number }}"
          name: "Release ${{ github.run_number }}"
          body: "Automated release for ARM64"
          draft: false
          prerelease: false
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
